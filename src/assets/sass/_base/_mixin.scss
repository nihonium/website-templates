@use "sass:math";
@use "variables";

// * ブレークポイント
@mixin view-at($mode: 'pc') {
  @if ($mode == 'sp') {
    @media screen and (max-width: variables.$mq-lg - 1) {
      @content;
    }
  }
  @else if ($mode == 'pc') {
    @media screen and (min-width: variables.$mq-lg) {
      @content;
    }
  }
}

// * リンクの文字色指定
@mixin link-color {
  @content;

  &:active,
  &:focus,
  &:visited,
  &:hover {
    @content;
  }
}

// * マウスホバー時に半透明
@mixin pcHover {
  transition: opacity 0.25s ease;

  &:any-link:hover {
    opacity: 0.7;
  }
}

// * フォントサイズ
$screenW: 1440;
$baseFontSize: 16;
$baseFontSizeSP: 3.2vw;

// https://terkel.jp/archives/2012/12/decimal-digits-and-rounding-sass-function/
// Round (四捨五入)
@function round-decimal($number, $digits: 0) {
  @return to-fixed($number, $digits, "round");
}

// Ceil (切り上げ)
@function ceil-decimal($number, $digits: 0) {
  @return to-fixed($number, $digits, "ceil");
}

// Floor (切り捨て)
@function floor-decimal($number, $digits: 0) {
  @return to-fixed($number, $digits, "floor");
}

@function to-fixed($number, $digits: 0, $round: "round") {
  $n: 1;
  // $number must be a number
  @if type-of($number) != number {
    @warn '#{ $number } is not a number.';
    @return $number;
  }
  // $digits must be a unitless number
  @if type-of($digits) != number {
    @warn '#{ $digits } is not a number.';
    @return $number;
  } @else if not unitless($digits) {
    @warn '#{ $digits } has a unit.';
    @return $number;
  }
  @for $i from 1 through $digits {
    $n: $n * 10;
  }
  @if $round == "round" {
    @return math.div(round($number * $n), $n);
  } @else if $round == "ceil" {
    @return ceil($number * $n) / $n;
  } @else if $round == "floor" {
    @return floor($number * $n) / $n;
  } @else {
    @warn '#{ $round } is undefined keyword.';
    @return $number;
  }
}

@mixin FontSize-PC($px) {
  font-size: round-decimal(math.div($px, $baseFontSize), 2) + rem;
}

@mixin FontSize-SP($px) {
  font-size: round-decimal((math.div($px, 375) * 100), 2) + vw;
}